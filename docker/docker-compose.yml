services:
  api:
    container_name: api
    build:
      context: ../
      dockerfile: ./Dockerfile
      target: development # or "production"
    env_file: .env
    ports:
      - ${API_PORT}:3000
      - 9229:9229 # vscode debug port
    networks:
      - db-network
      - app-network
    volumes:
      - ../modules:/app/src/extra
      - ../extensions:/app/src/.hexabot/custom/extensions
      - api-data:/app/uploads
    depends_on:
      mongo:
        condition: service_healthy
    healthcheck:
      test: 'wget --spider http://localhost:3000'
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s
    extra_hosts:
      - 'host.docker.internal:host-gateway'

  ui:
    container_name: ui
    image: hexastack/hexabot-ui:latest
    env_file: .env
    ports:
      - ${APP_FRONTEND_PORT}:8080
    networks:
      - app-network
    depends_on:
      api:
        condition: service_healthy

  mongo:
    container_name: mongo
    image: mongo:7.0
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    networks:
      - db-network
    healthcheck:
      test: echo 'db.stats().ok' | mongosh localhost:27017 --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s
    volumes:
      - mongo-data:/data/db

  flask:
    container_name: flask
    build:
      context: ../
      dockerfile: ./apps/flask_api/Dockerfile
    ports:
      - '8045:8045'
    networks:
      - app-network
    volumes:
      - /run/desktop/mnt/host/c/Users/brahi/my-chatbot/docker/app/uploads:/app/extensions/plugins/hexabot-plugin-visualise/uploads
      - /run/desktop/mnt/host/c/Users/brahi/my-chatbot/docker/app/generated_images:/app/generated_images

volumes:
  mongo-data:
  api-data:

networks:
  db-network:
  app-network:
